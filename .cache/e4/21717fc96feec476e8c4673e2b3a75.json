{"id":"../node_modules/@dreamirl/dreamengine/node_modules/pixi.js/lib/core/renderers/webgl/utils/ObjectRenderer.js","dependencies":[{"name":"C:\\Users\\Grimka\\Documents\\GitHub\\GGJ19\\node_modules\\@dreamirl\\dreamengine\\node_modules\\pixi.js\\lib\\core\\renderers\\webgl\\utils\\ObjectRenderer.js.map","includedInParent":true,"mtime":1505920121000},{"name":"C:\\Users\\Grimka\\Documents\\GitHub\\GGJ19\\package.json","includedInParent":true,"mtime":1548525594111},{"name":"C:\\Users\\Grimka\\Documents\\GitHub\\GGJ19\\node_modules\\@dreamirl\\dreamengine\\node_modules\\pixi.js\\package.json","includedInParent":true,"mtime":1548517163228},{"name":"../managers/WebGLManager","loc":{"line":5,"column":29},"parent":"C:\\Users\\Grimka\\Documents\\GitHub\\GGJ19\\node_modules\\@dreamirl\\dreamengine\\node_modules\\pixi.js\\lib\\core\\renderers\\webgl\\utils\\ObjectRenderer.js","resolved":"C:\\Users\\Grimka\\Documents\\GitHub\\GGJ19\\node_modules\\@dreamirl\\dreamengine\\node_modules\\pixi.js\\lib\\core\\renderers\\webgl\\managers\\WebGLManager.js"}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _WebGLManager2 = require('../managers/WebGLManager');\n\nvar _WebGLManager3 = _interopRequireDefault(_WebGLManager2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Base for a common object renderer that can be used as a system renderer plugin.\n *\n * @class\n * @extends PIXI.WebGLManager\n * @memberof PIXI\n */\nvar ObjectRenderer = function (_WebGLManager) {\n  _inherits(ObjectRenderer, _WebGLManager);\n\n  function ObjectRenderer() {\n    _classCallCheck(this, ObjectRenderer);\n\n    return _possibleConstructorReturn(this, _WebGLManager.apply(this, arguments));\n  }\n\n  /**\n   * Starts the renderer and sets the shader\n   *\n   */\n  ObjectRenderer.prototype.start = function start() {}\n  // set the shader..\n\n\n  /**\n   * Stops the renderer\n   *\n   */\n  ;\n\n  ObjectRenderer.prototype.stop = function stop() {\n    this.flush();\n  };\n\n  /**\n   * Stub method for rendering content and emptying the current batch.\n   *\n   */\n\n\n  ObjectRenderer.prototype.flush = function flush() {}\n  // flush!\n\n\n  /**\n   * Renders an object\n   *\n   * @param {PIXI.DisplayObject} object - The object to render.\n   */\n  ;\n\n  ObjectRenderer.prototype.render = function render(object) // eslint-disable-line no-unused-vars\n  {\n    // render the object\n  };\n\n  return ObjectRenderer;\n}(_WebGLManager3.default);\n\nexports.default = ObjectRenderer;\n","map":{"version":3,"sources":["../../../../../src/core/renderers/webgl/utils/ObjectRenderer.js"],"names":["ObjectRenderer","start","stop","flush","render","object"],"mappings":";;;;AAAA;;;;;;;;;;;;AAEA;;;;;;;IAOqBA,c;;;;;;;;;AAEjB;;;;2BAIAC,K,oBACA,CAEC;AADG;;;AAGJ;;;;;;2BAIAC,I,mBACA;AACI,SAAKC,KAAL;AACH,G;;AAED;;;;;;2BAIAA,K,oBACA,CAEC;AADG;;;AAGJ;;;;;;;2BAKAC,M,mBAAOC,M,EAAQ;AACf;AACI;AACH,G;;;;;kBArCgBL,c","file":"ObjectRenderer.js","sourcesContent":["import WebGLManager from '../managers/WebGLManager';\n\n/**\n * Base for a common object renderer that can be used as a system renderer plugin.\n *\n * @class\n * @extends PIXI.WebGLManager\n * @memberof PIXI\n */\nexport default class ObjectRenderer extends WebGLManager\n{\n    /**\n     * Starts the renderer and sets the shader\n     *\n     */\n    start()\n    {\n        // set the shader..\n    }\n\n    /**\n     * Stops the renderer\n     *\n     */\n    stop()\n    {\n        this.flush();\n    }\n\n    /**\n     * Stub method for rendering content and emptying the current batch.\n     *\n     */\n    flush()\n    {\n        // flush!\n    }\n\n    /**\n     * Renders an object\n     *\n     * @param {PIXI.DisplayObject} object - The object to render.\n     */\n    render(object) // eslint-disable-line no-unused-vars\n    {\n        // render the object\n    }\n}\n"]}},"hash":"8335466960b6cc966a94348e376fc5dc","cacheData":{"env":{}}}