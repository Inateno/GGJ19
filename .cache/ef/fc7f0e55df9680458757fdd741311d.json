{"id":"../node_modules/pixi.js/lib/extract/index.js","dependencies":[{"name":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/extract/index.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/antoine/Documents/perso/gamedev/GGJ19/package.json","includedInParent":true,"mtime":1548542467768},{"name":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1548541995508},{"name":"./webgl/WebGLExtract","loc":{"line":5,"column":28},"parent":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/extract/index.js","resolved":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/extract/webgl/WebGLExtract.js"},{"name":"./canvas/CanvasExtract","loc":{"line":14,"column":29},"parent":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/extract/index.js","resolved":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/extract/canvas/CanvasExtract.js"}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _WebGLExtract = require('./webgl/WebGLExtract');\n\nObject.defineProperty(exports, 'webgl', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_WebGLExtract).default;\n  }\n});\n\nvar _CanvasExtract = require('./canvas/CanvasExtract');\n\nObject.defineProperty(exports, 'canvas', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CanvasExtract).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n","map":{"version":3,"sources":["../../src/extract/index.js"],"names":["default"],"mappings":";;;;;;;;;iDAoBSA,O;;;;;;;;;kDACAA,O","file":"index.js","sourcesContent":["/**\n * This namespace provides renderer-specific plugins for exporting content from a renderer.\n * For instance, these plugins can be used for saving an Image, Canvas element or for exporting the raw image data (pixels).\n *\n * Do not instantiate these plugins directly. It is available from the `renderer.plugins` property.\n * See {@link PIXI.CanvasRenderer#plugins} or {@link PIXI.WebGLRenderer#plugins}.\n * @example\n * // Create a new app (will auto-add extract plugin to renderer)\n * const app = new PIXI.Application();\n *\n * // Draw a red circle\n * const graphics = new PIXI.Graphics()\n *     .beginFill(0xFF0000)\n *     .drawCircle(0, 0, 50);\n *\n * // Render the graphics as an HTMLImageElement\n * const image = app.renderer.plugins.extract.image(graphics);\n * document.body.appendChild(image);\n * @namespace PIXI.extract\n */\nexport { default as webgl } from './webgl/WebGLExtract';\nexport { default as canvas } from './canvas/CanvasExtract';\n"]}},"hash":"a6ef3419edc45f7cc2ab18af79980f87","cacheData":{"env":{}}}