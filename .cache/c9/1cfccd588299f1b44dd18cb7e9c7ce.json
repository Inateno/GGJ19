{"id":"../node_modules/pixi.js/lib/loaders/spritesheetParser.js","dependencies":[{"name":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/loaders/spritesheetParser.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/antoine/Documents/perso/gamedev/GGJ19/package.json","includedInParent":true,"mtime":1548542467768},{"name":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1548541995508},{"name":"resource-loader","loc":{"line":45,"column":30},"parent":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/loaders/spritesheetParser.js","resolved":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/resource-loader/lib/index.js"},{"name":"url","loc":{"line":47,"column":19},"parent":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/loaders/spritesheetParser.js","resolved":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/url/url.js"},{"name":"../core","loc":{"line":51,"column":20},"parent":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/loaders/spritesheetParser.js","resolved":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/core/index.js"}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nexports.default = function () {\n    return function spritesheetParser(resource, next) {\n        var imageResourceName = resource.name + '_image';\n\n        // skip if no data, its not json, it isn't spritesheet data, or the image resource already exists\n        if (!resource.data || resource.type !== _resourceLoader.Resource.TYPE.JSON || !resource.data.frames || this.resources[imageResourceName]) {\n            next();\n\n            return;\n        }\n\n        var loadOptions = {\n            crossOrigin: resource.crossOrigin,\n            metadata: resource.metadata.imageMetadata,\n            parentResource: resource\n        };\n\n        var resourcePath = getResourcePath(resource, this.baseUrl);\n\n        // load the image for this sheet\n        this.add(imageResourceName, resourcePath, loadOptions, function onImageLoad(res) {\n            if (res.error) {\n                next(res.error);\n\n                return;\n            }\n\n            var spritesheet = new _core.Spritesheet(res.texture.baseTexture, resource.data, resource.url);\n\n            spritesheet.parse(function () {\n                resource.spritesheet = spritesheet;\n                resource.textures = spritesheet.textures;\n                next();\n            });\n        });\n    };\n};\n\nexports.getResourcePath = getResourcePath;\n\nvar _resourceLoader = require('resource-loader');\n\nvar _url = require('url');\n\nvar _url2 = _interopRequireDefault(_url);\n\nvar _core = require('../core');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getResourcePath(resource, baseUrl) {\n    // Prepend url path unless the resource image is a data url\n    if (resource.isDataUrl) {\n        return resource.data.meta.image;\n    }\n\n    return _url2.default.resolve(resource.url.replace(baseUrl, ''), resource.data.meta.image);\n}\n","map":{"version":3,"sources":["../../src/loaders/spritesheetParser.js"],"names":["spritesheetParser","resource","next","imageResourceName","name","data","type","TYPE","JSON","frames","resources","loadOptions","crossOrigin","metadata","imageMetadata","parentResource","resourcePath","getResourcePath","baseUrl","add","onImageLoad","res","error","spritesheet","texture","baseTexture","url","parse","textures","isDataUrl","meta","image","resolve","replace"],"mappings":";;;;kBAIe,YACf;AACI,WAAO,SAASA,iBAAT,CAA2BC,QAA3B,EAAqCC,IAArC,EACP;AACI,YAAMC,oBAAuBF,SAASG,IAAhC,WAAN;;AAEA;AACA,YAAI,CAACH,SAASI,IAAV,IACGJ,SAASK,IAAT,KAAkB,yBAASC,IAAT,CAAcC,IADnC,IAEG,CAACP,SAASI,IAAT,CAAcI,MAFlB,IAGG,KAAKC,SAAL,CAAeP,iBAAf,CAHP,EAKA;AACID;;AAEA;AACH;;AAED,YAAMS,cAAc;AAChBC,yBAAaX,SAASW,WADN;AAEhBC,sBAAUZ,SAASY,QAAT,CAAkBC,aAFZ;AAGhBC,4BAAgBd;AAHA,SAApB;;AAMA,YAAMe,eAAeC,gBAAgBhB,QAAhB,EAA0B,KAAKiB,OAA/B,CAArB;;AAEA;AACA,aAAKC,GAAL,CAAShB,iBAAT,EAA4Ba,YAA5B,EAA0CL,WAA1C,EAAuD,SAASS,WAAT,CAAqBC,GAArB,EACvD;AACI,gBAAIA,IAAIC,KAAR,EACA;AACIpB,qBAAKmB,IAAIC,KAAT;;AAEA;AACH;;AAED,gBAAMC,cAAc,sBAChBF,IAAIG,OAAJ,CAAYC,WADI,EAEhBxB,SAASI,IAFO,EAGhBJ,SAASyB,GAHO,CAApB;;AAMAH,wBAAYI,KAAZ,CAAkB,YAClB;AACI1B,yBAASsB,WAAT,GAAuBA,WAAvB;AACAtB,yBAAS2B,QAAT,GAAoBL,YAAYK,QAAhC;AACA1B;AACH,aALD;AAMH,SArBD;AAsBH,KA/CD;AAgDH,C;;QAEee,e,GAAAA,e;;AAxDhB;;AACA;;;;AACA;;;;AAsDO,SAASA,eAAT,CAAyBhB,QAAzB,EAAmCiB,OAAnC,EACP;AACI;AACA,QAAIjB,SAAS4B,SAAb,EACA;AACI,eAAO5B,SAASI,IAAT,CAAcyB,IAAd,CAAmBC,KAA1B;AACH;;AAED,WAAO,cAAIC,OAAJ,CAAY/B,SAASyB,GAAT,CAAaO,OAAb,CAAqBf,OAArB,EAA8B,EAA9B,CAAZ,EAA+CjB,SAASI,IAAT,CAAcyB,IAAd,CAAmBC,KAAlE,CAAP;AACH","file":"spritesheetParser.js","sourcesContent":["import { Resource } from 'resource-loader';\nimport url from 'url';\nimport { Spritesheet } from '../core';\n\nexport default function ()\n{\n    return function spritesheetParser(resource, next)\n    {\n        const imageResourceName = `${resource.name}_image`;\n\n        // skip if no data, its not json, it isn't spritesheet data, or the image resource already exists\n        if (!resource.data\n            || resource.type !== Resource.TYPE.JSON\n            || !resource.data.frames\n            || this.resources[imageResourceName]\n        )\n        {\n            next();\n\n            return;\n        }\n\n        const loadOptions = {\n            crossOrigin: resource.crossOrigin,\n            metadata: resource.metadata.imageMetadata,\n            parentResource: resource,\n        };\n\n        const resourcePath = getResourcePath(resource, this.baseUrl);\n\n        // load the image for this sheet\n        this.add(imageResourceName, resourcePath, loadOptions, function onImageLoad(res)\n        {\n            if (res.error)\n            {\n                next(res.error);\n\n                return;\n            }\n\n            const spritesheet = new Spritesheet(\n                res.texture.baseTexture,\n                resource.data,\n                resource.url\n            );\n\n            spritesheet.parse(() =>\n            {\n                resource.spritesheet = spritesheet;\n                resource.textures = spritesheet.textures;\n                next();\n            });\n        });\n    };\n}\n\nexport function getResourcePath(resource, baseUrl)\n{\n    // Prepend url path unless the resource image is a data url\n    if (resource.isDataUrl)\n    {\n        return resource.data.meta.image;\n    }\n\n    return url.resolve(resource.url.replace(baseUrl, ''), resource.data.meta.image);\n}\n"]}},"hash":"e1e6a3ef1be4ff1eb895da2bb007e676","cacheData":{"env":{}}}