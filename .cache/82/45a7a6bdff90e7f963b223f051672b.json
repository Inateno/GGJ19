{"id":"../node_modules/pixi.js/lib/prepare/index.js","dependencies":[{"name":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/prepare/index.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/antoine/Documents/perso/gamedev/GGJ19/package.json","includedInParent":true,"mtime":1548542467768},{"name":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1548541995508},{"name":"./webgl/WebGLPrepare","loc":{"line":5,"column":28},"parent":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/prepare/index.js","resolved":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/prepare/webgl/WebGLPrepare.js"},{"name":"./canvas/CanvasPrepare","loc":{"line":14,"column":29},"parent":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/prepare/index.js","resolved":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/prepare/canvas/CanvasPrepare.js"},{"name":"./BasePrepare","loc":{"line":23,"column":27},"parent":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/prepare/index.js","resolved":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/prepare/BasePrepare.js"},{"name":"./limiters/CountLimiter","loc":{"line":32,"column":28},"parent":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/prepare/index.js","resolved":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/prepare/limiters/CountLimiter.js"},{"name":"./limiters/TimeLimiter","loc":{"line":41,"column":27},"parent":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/prepare/index.js","resolved":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/prepare/limiters/TimeLimiter.js"}],"generated":{"js":"'use strict';\n\nexports.__esModule = true;\n\nvar _WebGLPrepare = require('./webgl/WebGLPrepare');\n\nObject.defineProperty(exports, 'webgl', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_WebGLPrepare).default;\n  }\n});\n\nvar _CanvasPrepare = require('./canvas/CanvasPrepare');\n\nObject.defineProperty(exports, 'canvas', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CanvasPrepare).default;\n  }\n});\n\nvar _BasePrepare = require('./BasePrepare');\n\nObject.defineProperty(exports, 'BasePrepare', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_BasePrepare).default;\n  }\n});\n\nvar _CountLimiter = require('./limiters/CountLimiter');\n\nObject.defineProperty(exports, 'CountLimiter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CountLimiter).default;\n  }\n});\n\nvar _TimeLimiter = require('./limiters/TimeLimiter');\n\nObject.defineProperty(exports, 'TimeLimiter', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TimeLimiter).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n","map":{"version":3,"sources":["../../src/prepare/index.js"],"names":["default"],"mappings":";;;;;;;;;iDA4BSA,O;;;;;;;;;kDACAA,O;;;;;;;;;gDACAA,O;;;;;;;;;iDACAA,O;;;;;;;;;gDACAA,O","file":"index.js","sourcesContent":["/**\n * The prepare namespace provides renderer-specific plugins for pre-rendering DisplayObjects. These plugins are useful for\n * asynchronously preparing assets, textures, graphics waiting to be displayed.\n *\n * Do not instantiate these plugins directly. It is available from the `renderer.plugins` property.\n * See {@link PIXI.CanvasRenderer#plugins} or {@link PIXI.WebGLRenderer#plugins}.\n * @example\n * // Create a new application\n * const app = new PIXI.Application();\n * document.body.appendChild(app.view);\n *\n * // Don't start rendering right away\n * app.stop();\n *\n * // create a display object\n * const rect = new PIXI.Graphics()\n *     .beginFill(0x00ff00)\n *     .drawRect(40, 40, 200, 200);\n *\n * // Add to the stage\n * app.stage.addChild(rect);\n *\n * // Don't start rendering until the graphic is uploaded to the GPU\n * app.renderer.plugins.prepare.upload(app.stage, () => {\n *     app.start();\n * });\n * @namespace PIXI.prepare\n */\nexport { default as webgl } from './webgl/WebGLPrepare';\nexport { default as canvas } from './canvas/CanvasPrepare';\nexport { default as BasePrepare } from './BasePrepare';\nexport { default as CountLimiter } from './limiters/CountLimiter';\nexport { default as TimeLimiter } from './limiters/TimeLimiter';\n"]}},"hash":"210e795eb9b0d33e9ad42a11fa79d5bf","cacheData":{"env":{}}}