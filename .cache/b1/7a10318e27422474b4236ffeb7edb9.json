{"id":"../node_modules/pixi.js/lib/core/utils/createIndicesForQuads.js","dependencies":[{"name":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/lib/core/utils/createIndicesForQuads.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/antoine/Documents/perso/gamedev/GGJ19/package.json","includedInParent":true,"mtime":1548542467768},{"name":"/Users/antoine/Documents/perso/gamedev/GGJ19/node_modules/pixi.js/package.json","includedInParent":true,"mtime":1548541995508}],"generated":{"js":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = createIndicesForQuads;\n/**\n * Generic Mask Stack data structure\n *\n * @memberof PIXI\n * @function createIndicesForQuads\n * @private\n * @param {number} size - Number of quads\n * @return {Uint16Array} indices\n */\nfunction createIndicesForQuads(size) {\n    // the total number of indices in our array, there are 6 points per quad.\n\n    var totalIndices = size * 6;\n\n    var indices = new Uint16Array(totalIndices);\n\n    // fill the indices with the quads to draw\n    for (var i = 0, j = 0; i < totalIndices; i += 6, j += 4) {\n        indices[i + 0] = j + 0;\n        indices[i + 1] = j + 1;\n        indices[i + 2] = j + 2;\n        indices[i + 3] = j + 0;\n        indices[i + 4] = j + 2;\n        indices[i + 5] = j + 3;\n    }\n\n    return indices;\n}\n","map":{"version":3,"sources":["../../../src/core/utils/createIndicesForQuads.js"],"names":["createIndicesForQuads","size","totalIndices","indices","Uint16Array","i","j"],"mappings":";;;kBASwBA,qB;AATxB;;;;;;;;;AASe,SAASA,qBAAT,CAA+BC,IAA/B,EACf;AACI;;AAEA,QAAMC,eAAeD,OAAO,CAA5B;;AAEA,QAAME,UAAU,IAAIC,WAAJ,CAAgBF,YAAhB,CAAhB;;AAEA;AACA,SAAK,IAAIG,IAAI,CAAR,EAAWC,IAAI,CAApB,EAAuBD,IAAIH,YAA3B,EAAyCG,KAAK,CAAL,EAAQC,KAAK,CAAtD,EACA;AACIH,gBAAQE,IAAI,CAAZ,IAAiBC,IAAI,CAArB;AACAH,gBAAQE,IAAI,CAAZ,IAAiBC,IAAI,CAArB;AACAH,gBAAQE,IAAI,CAAZ,IAAiBC,IAAI,CAArB;AACAH,gBAAQE,IAAI,CAAZ,IAAiBC,IAAI,CAArB;AACAH,gBAAQE,IAAI,CAAZ,IAAiBC,IAAI,CAArB;AACAH,gBAAQE,IAAI,CAAZ,IAAiBC,IAAI,CAArB;AACH;;AAED,WAAOH,OAAP;AACH","file":"createIndicesForQuads.js","sourcesContent":["/**\n * Generic Mask Stack data structure\n *\n * @memberof PIXI\n * @function createIndicesForQuads\n * @private\n * @param {number} size - Number of quads\n * @return {Uint16Array} indices\n */\nexport default function createIndicesForQuads(size)\n{\n    // the total number of indices in our array, there are 6 points per quad.\n\n    const totalIndices = size * 6;\n\n    const indices = new Uint16Array(totalIndices);\n\n    // fill the indices with the quads to draw\n    for (let i = 0, j = 0; i < totalIndices; i += 6, j += 4)\n    {\n        indices[i + 0] = j + 0;\n        indices[i + 1] = j + 1;\n        indices[i + 2] = j + 2;\n        indices[i + 3] = j + 0;\n        indices[i + 4] = j + 2;\n        indices[i + 5] = j + 3;\n    }\n\n    return indices;\n}\n"]}},"hash":"a566650b843808a5fb5fa64cd3f2a67d","cacheData":{"env":{}}}